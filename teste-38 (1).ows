<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13)" position="(-176.66666666666663, 160.99999999999972)" />
		<node id="1" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(14)" position="(-176.33333333333326, 350.33333333333303)" />
		<node id="2" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-14)" position="(-182.33333333333326, 468.33333333333303)" />
		<node id="3" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(15)" position="(-187.33333333333326, 587.333333333333)" />
		<node id="4" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-15)" position="(-187.33333333333326, 707.333333333333)" />
		<node id="5" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(16)" position="(-187.33333333333326, 827.333333333333)" />
		<node id="6" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-16)" position="(-187.33333333333326, 947.333333333333)" />
		<node id="7" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(17)" position="(-187.33333333333326, 1068.583333333333)" />
		<node id="8" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-17)" position="(785.5833333333333, 99.694444444444)" />
		<node id="9" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(18)" position="(786.1388888888889, 203.444444444444)" />
		<node id="10" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-18)" position="(781.1388888888889, 324.694444444444)" />
		<node id="11" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(19)" position="(778.6388888888889, 453.4444444444439)" />
		<node id="12" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-19)" position="(773.6388888888889, 573.4444444444439)" />
		<node id="13" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(20)" position="(769.8888888888889, 694.6944444444439)" />
		<node id="14" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-20)" position="(776.1388888888889, 813.4444444444439)" />
		<node id="15" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(21)" position="(771.277777777778, 929.4166666666661)" />
		<node id="16" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-21)" position="(770.027777777778, 1040.3888888888882)" />
		<node id="17" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(22)" position="(768.9166666666667, 1151.3611111111104)" />
		<node id="18" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-22)" position="(781.5555555555554, 1301.777777777777)" />
		<node id="19" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(23)" position="(775.9999999999998, 1415.1111111111109)" />
		<node id="20" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-23)" position="(774.8888888888889, 1518.4444444444434)" />
		<node id="21" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(24)" position="(774.3333333333333, 1618.4444444444443)" />
		<node id="22" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-24)" position="(1538.2222222222217, 143.44444444444343)" />
		<node id="23" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(25)" position="(1537.666666666666, 278.444444444444)" />
		<node id="24" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-25)" position="(1539.4722222222217, 403.86111111110995)" />
		<node id="25" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(26)" position="(1543.916666666666, 536.7777777777774)" />
		<node id="26" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-26)" position="(1546.1388888888887, 643.0277777777765)" />
		<node id="27" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(27)" position="(1545.583333333333, 750.9444444444441)" />
		<node id="28" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-27)" position="(1542.8055555555557, 861.7777777777767)" />
		<node id="29" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(28)" position="(1540.166666666666, 980.5277777777776)" />
		<node id="30" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-28)" position="(1540.7222222222226, 1088.86111111111)" />
		<node id="31" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(29)" position="(1536.0, 1188.0277777777774)" />
		<node id="32" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-29)" position="(1539.4722222222226, 1289.6944444444434)" />
		<node id="33" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(30)" position="(1537.25, 1390.944444444444)" />
		<node id="34" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-30)" position="(1534.8888888888887, 1487.194444444443)" />
		<node id="35" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(31)" position="(1535.166666666667, 1610.944444444444)" />
		<node id="36" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-31)" position="(1540.0, 1718.9444444444425)" />
		<node id="37" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(32)" position="(1541.25, 1848.9444444444425)" />
		<node id="38" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-32)" position="(2158.750000000001, 81.02777777777578)" />
		<node id="39" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(33)" position="(2158.750000000001, 201.02777777777578)" />
		<node id="40" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-33)" position="(2168.333333333334, 313.9444444444424)" />
		<node id="41" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(34)" position="(2172.083333333334, 420.1944444444425)" />
		<node id="42" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-34)" position="(2176.250000000001, 543.111111111109)" />
		<node id="43" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(35)" position="(2177.916666666667, 661.861111111109)" />
		<node id="44" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-35)" position="(2180.416666666668, 780.611111111109)" />
		<node id="45" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(36)" position="(2180.416666666668, 891.861111111109)" />
		<node id="46" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-36)" position="(2185.833333333335, 993.111111111109)" />
		<node id="47" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(37)" position="(2191.250000000001, 1111.4444444444425)" />
		<node id="48" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(13-37)" position="(2191.666666666669, 1299.7777777777758)" />
		<node id="49" name="CSV File Import" qualified_name="Orange.widgets.data.owcsvimport.OWCSVFileImport" project_name="Orange3" version="" title="rodada(38)" position="(2191.666666666669, 1419.7777777777758)" />
		<node id="50" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate" position="(49.5, 275.5)" />
		<node id="51" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script" position="(197.3809523809523, 273.08333333333303)" />
		<node id="52" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (2)" position="(372.5, 273.5)" />
		<node id="53" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(256.1309523809523, 523.083333333333)" />
		<node id="54" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (1)" position="(37.0, 519.25)" />
		<node id="55" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table" position="(466.25, 517.25)" />
		<node id="56" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (2)" position="(18.25, 745.5)" />
		<node id="57" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (2)" position="(234.8809523809523, 738.083333333333)" />
		<node id="58" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (1)" position="(432.5, 734.75)" />
		<node id="59" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (3)" position="(-5.5, 1000.5)" />
		<node id="60" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (3)" position="(206.1309523809523, 999.333333333333)" />
		<node id="61" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (3)" position="(398.75, 992.25)" />
		<node id="62" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (4)" position="(953.25, 144.25)" />
		<node id="63" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (4)" position="(1122.3809523809523, 146.83333333333303)" />
		<node id="64" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (4)" position="(1292.5, 141.0)" />
		<node id="65" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (5)" position="(964.5, 384.25)" />
		<node id="66" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (5)" position="(1107.3809523809523, 376.83333333333303)" />
		<node id="67" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (5)" position="(1292.5, 378.5)" />
		<node id="68" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (6)" position="(932.0, 633.0)" />
		<node id="69" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (6)" position="(1109.8809523809523, 638.083333333333)" />
		<node id="70" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (6)" position="(1295.0, 631.0)" />
		<node id="71" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (7)" position="(927.0, 868.0)" />
		<node id="72" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (7)" position="(1101.1309523809523, 869.333333333333)" />
		<node id="73" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (7)" position="(1286.25, 869.75)" />
		<node id="74" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (8)" position="(940.75, 1090.5)" />
		<node id="75" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (8)" position="(1112.3809523809523, 1089.333333333333)" />
		<node id="76" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (8)" position="(1293.75, 1088.5)" />
		<node id="77" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (9)" position="(933.25, 1355.5)" />
		<node id="78" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (9)" position="(1114.8809523809523, 1336.833333333333)" />
		<node id="79" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (9)" position="(1287.5, 1326.0)" />
		<node id="80" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (10)" position="(929.5, 1561.75)" />
		<node id="81" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (10)" position="(1097.3809523809523, 1559.333333333333)" />
		<node id="82" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (10)" position="(1287.5, 1563.5)" />
		<node id="83" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (11)" position="(1737.0, 186.75)" />
		<node id="84" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (11)" position="(1877.3809523809523, 189.33333333333303)" />
		<node id="85" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (11)" position="(2017.5, 187.25)" />
		<node id="86" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (12)" position="(1669.5, 474.25)" />
		<node id="87" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (12)" position="(1842.3809523809523, 471.83333333333303)" />
		<node id="88" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (12)" position="(2022.5, 473.5)" />
		<node id="89" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (13)" position="(1695.75, 679.25)" />
		<node id="90" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (13)" position="(1852.3809523809523, 675.583333333333)" />
		<node id="91" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (13)" position="(2015.8333333333333, 676.4166666666667)" />
		<node id="92" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (14)" position="(1687.0, 906.75)" />
		<node id="93" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (14)" position="(1843.6309523809523, 909.333333333333)" />
		<node id="94" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (14)" position="(2015.0, 903.5)" />
		<node id="95" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (15)" position="(1690.75, 1139.25)" />
		<node id="96" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (15)" position="(1854.8809523809523, 1134.333333333333)" />
		<node id="97" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (15)" position="(2021.25, 1134.75)" />
		<node id="98" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (16)" position="(1683.25, 1319.25)" />
		<node id="99" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (16)" position="(1846.1309523809523, 1316.833333333333)" />
		<node id="100" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (16)" position="(2028.75, 1316.0)" />
		<node id="101" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (17)" position="(1675.75, 1534.25)" />
		<node id="102" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (17)" position="(1842.3809523809523, 1528.083333333333)" />
		<node id="103" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (17)" position="(2027.5, 1528.5)" />
		<node id="104" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (18)" position="(1682.0, 1764.25)" />
		<node id="105" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (18)" position="(1846.1309523809523, 1751.833333333333)" />
		<node id="106" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (18)" position="(2030.0, 1751.0)" />
		<node id="107" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (19)" position="(2339.5, 135.5)" />
		<node id="108" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (19)" position="(2537.3809523809523, 139.33333333333303)" />
		<node id="109" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (19)" position="(2706.25, 139.75)" />
		<node id="110" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (20)" position="(2335.75, 353.0)" />
		<node id="111" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (20)" position="(2537.3809523809523, 356.83333333333303)" />
		<node id="112" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (20)" position="(2712.5, 357.25)" />
		<node id="113" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (21)" position="(2339.5, 590.5)" />
		<node id="114" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (21)" position="(2502.3809523809523, 586.833333333333)" />
		<node id="115" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (21)" position="(2727.5, 586.0)" />
		<node id="116" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (22)" position="(2338.25, 826.75)" />
		<node id="117" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (22)" position="(2502.3809523809523, 814.333333333333)" />
		<node id="118" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (22)" position="(2717.5, 816.0)" />
		<node id="119" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (23)" position="(2347.0, 1043.0)" />
		<node id="120" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (23)" position="(2504.8809523809523, 1046.833333333333)" />
		<node id="121" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (23)" position="(2720.0, 1052.25)" />
		<node id="122" name="Concatenate" qualified_name="Orange.widgets.data.owconcatenate.OWConcatenate" project_name="Orange3" version="" title="Concatenate (24)" position="(2338.25, 1333.0)" />
		<node id="123" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (24)" position="(2499.8809523809523, 1339.333333333333)" />
		<node id="124" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (24)" position="(2718.75, 1336.0)" />
		<node id="125" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (25)" position="(2526.0, 1607.5)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="50" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="1" source_node_id="1" sink_node_id="50" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="2" source_node_id="50" sink_node_id="51" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="3" source_node_id="51" sink_node_id="52" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="4" source_node_id="54" sink_node_id="53" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="5" source_node_id="53" sink_node_id="55" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="6" source_node_id="2" sink_node_id="54" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="7" source_node_id="3" sink_node_id="54" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="8" source_node_id="4" sink_node_id="56" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="9" source_node_id="5" sink_node_id="56" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="10" source_node_id="56" sink_node_id="57" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="11" source_node_id="57" sink_node_id="58" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="12" source_node_id="6" sink_node_id="59" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="13" source_node_id="7" sink_node_id="59" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="14" source_node_id="60" sink_node_id="61" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="15" source_node_id="59" sink_node_id="60" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="16" source_node_id="63" sink_node_id="64" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="17" source_node_id="62" sink_node_id="63" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="18" source_node_id="8" sink_node_id="62" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="19" source_node_id="9" sink_node_id="62" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="20" source_node_id="10" sink_node_id="65" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="21" source_node_id="11" sink_node_id="65" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="22" source_node_id="66" sink_node_id="67" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="23" source_node_id="65" sink_node_id="66" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="24" source_node_id="69" sink_node_id="70" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="25" source_node_id="68" sink_node_id="69" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="26" source_node_id="12" sink_node_id="68" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="27" source_node_id="13" sink_node_id="68" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="28" source_node_id="72" sink_node_id="73" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="29" source_node_id="71" sink_node_id="72" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="30" source_node_id="14" sink_node_id="71" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="31" source_node_id="15" sink_node_id="71" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="32" source_node_id="74" sink_node_id="75" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="33" source_node_id="75" sink_node_id="76" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="34" source_node_id="16" sink_node_id="74" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="35" source_node_id="17" sink_node_id="74" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="36" source_node_id="18" sink_node_id="77" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="37" source_node_id="19" sink_node_id="77" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="38" source_node_id="77" sink_node_id="78" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="39" source_node_id="78" sink_node_id="79" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="40" source_node_id="81" sink_node_id="82" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="41" source_node_id="20" sink_node_id="80" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="42" source_node_id="21" sink_node_id="80" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="43" source_node_id="80" sink_node_id="81" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="44" source_node_id="22" sink_node_id="83" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="45" source_node_id="23" sink_node_id="83" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="46" source_node_id="84" sink_node_id="85" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="47" source_node_id="83" sink_node_id="84" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="48" source_node_id="24" sink_node_id="86" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="49" source_node_id="25" sink_node_id="86" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="50" source_node_id="87" sink_node_id="88" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="51" source_node_id="86" sink_node_id="87" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="52" source_node_id="90" sink_node_id="91" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="53" source_node_id="26" sink_node_id="89" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="54" source_node_id="27" sink_node_id="89" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="55" source_node_id="89" sink_node_id="90" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="56" source_node_id="93" sink_node_id="94" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="57" source_node_id="28" sink_node_id="92" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="58" source_node_id="29" sink_node_id="92" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="59" source_node_id="92" sink_node_id="93" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="60" source_node_id="30" sink_node_id="95" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="61" source_node_id="31" sink_node_id="95" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="62" source_node_id="96" sink_node_id="97" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="63" source_node_id="95" sink_node_id="96" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="64" source_node_id="32" sink_node_id="98" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="65" source_node_id="33" sink_node_id="98" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="66" source_node_id="99" sink_node_id="100" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="67" source_node_id="98" sink_node_id="99" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="68" source_node_id="102" sink_node_id="103" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="69" source_node_id="34" sink_node_id="101" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="70" source_node_id="35" sink_node_id="101" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="71" source_node_id="101" sink_node_id="102" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="72" source_node_id="36" sink_node_id="104" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="73" source_node_id="37" sink_node_id="104" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="74" source_node_id="105" sink_node_id="106" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="75" source_node_id="104" sink_node_id="105" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="76" source_node_id="108" sink_node_id="109" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="77" source_node_id="38" sink_node_id="107" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="78" source_node_id="39" sink_node_id="107" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="79" source_node_id="107" sink_node_id="108" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="80" source_node_id="111" sink_node_id="112" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="81" source_node_id="40" sink_node_id="110" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="82" source_node_id="41" sink_node_id="110" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="83" source_node_id="110" sink_node_id="111" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="84" source_node_id="42" sink_node_id="113" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="85" source_node_id="43" sink_node_id="113" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="86" source_node_id="114" sink_node_id="115" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="87" source_node_id="113" sink_node_id="114" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="88" source_node_id="44" sink_node_id="116" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="89" source_node_id="45" sink_node_id="116" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="90" source_node_id="117" sink_node_id="118" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="91" source_node_id="116" sink_node_id="117" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="92" source_node_id="120" sink_node_id="121" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="93" source_node_id="46" sink_node_id="119" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="94" source_node_id="47" sink_node_id="119" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="95" source_node_id="119" sink_node_id="120" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="96" source_node_id="123" sink_node_id="124" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="97" source_node_id="48" sink_node_id="122" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="98" source_node_id="49" sink_node_id="122" source_channel="Data" sink_channel="Additional Data" enabled="true" source_channel_id="data" sink_channel_id="additional_data" />
		<link id="99" source_node_id="122" sink_node_id="123" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="100" source_node_id="122" sink_node_id="125" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/Downloads/rodada-13-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00$\x00\x00\x01\x18\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="1" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-14-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/Downloads/rodada-14-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-14-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00$\x00\x00\x01\x18\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="2" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00$\x00\x00\x01\x18\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="3" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="4" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="5" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="6" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="7" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="8" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="9" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="10" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="11" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="12" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="13" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="14" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="15" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="16" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="17" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="18" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="19" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x19\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x18\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="20" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="21" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="22" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="23" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="24" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="25" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="26" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="27" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-27-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-27-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="28" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="29" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-28-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-28-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 13, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-27-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="30" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="31" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-29-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-29-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-28-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 13, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-27-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="32" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="33" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-30-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-30-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-29-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-28-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 13, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-27-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="34" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="35" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-31-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-31-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-30-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-29-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-28-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 13, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-27-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-26-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-25-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-24-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-23-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-22-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-21-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-20-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="36" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="37" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-32-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-32-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="38" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="39" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-33-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-33-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="40" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="41" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-34-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-34-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="42" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="43" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-35-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-35-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-34-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="44" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="45" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-36-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-36-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="46" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="47" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-37-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-37-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-36-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="48" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36-37.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36-37.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00$\x00\x00\x01\x18\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x17\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="49" format="literal">{'_session_items': [], '_session_items_v2': [({'type': 'AbsPath', 'path': 'C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-38-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-38-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35-36.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34-35.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33-34.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32-33.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31-32.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30-31.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29-30.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28-29.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27-28.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26-27.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25-26.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24-25.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23-24.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22-23.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21-22.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20-21.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19-20.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-13-14-15-16-17-18-19.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-19-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-18-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-17-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-16-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''}), ({'type': 'AbsPath', 'path': 'C:/home/limeira/C:/Users/Dimitris Calixto/Desktop/tcc2024/rodada-15-completa.csv'}, {'encoding': 'utf-8', 'delimiter': ',', 'quotechar': '"', 'doublequote': True, 'skipinitialspace': True, 'quoting': 0, 'columntypes': [{'start': 0, 'stop': 12, 'value': 'Auto'}], 'rowspec': [{'start': 0, 'stop': 1, 'value': 'Header'}], 'decimal_separator': '.', 'group_separator': ''})], 'compatibility_mode': False, 'controlAreaVisible': True, 'dialog_state': {'directory': 'C:/Users/Dimitris Calixto/Desktop/tcc2024', 'filter': 'Text - comma separated (*.csv, *)'}, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x01\x00\x00\x00#\x00\x00\x01\x1d\x00\x00\x01{\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x02\x00\x00\x00B\x00\x00\x01\x1c\x00\x00\x01z', '__version__': 3}</properties>
		<properties node_id="50" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="51" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01!\x00\x00\x00\x10\x00\x00\x04\xe0\x00\x00\x03?\x00\x00\x01"\x00\x00\x00.\x00\x00\x04\xdf\x00\x00\x03&gt;\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01"\x00\x00\x00.\x00\x00\x04\xdf\x00\x00\x03&gt;', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="52" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [0], 'columns': [0, 1, 2]}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="53" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01!\x00\x00\x00\x10\x00\x00\x04\xe0\x00\x00\x03?\x00\x00\x01"\x00\x00\x00.\x00\x00\x04\xdf\x00\x00\x03&gt;\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01"\x00\x00\x00.\x00\x00\x04\xdf\x00\x00\x03&gt;', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 20\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="54" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xf4\x00\x00\x04]\x00\x00\x02\xc6\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04\\\x00\x00\x02\xc5\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04\\\x00\x00\x02\xc5', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="55" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="56" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xf4\x00\x00\x04]\x00\x00\x02\xc6\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04\\\x00\x00\x02\xc5\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04\\\x00\x00\x02\xc5', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="57" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 30\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="58" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="59" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xf4\x00\x00\x04]\x00\x00\x02\xc6\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04\\\x00\x00\x02\xc5\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04\\\x00\x00\x02\xc5', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="60" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 38\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="61" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="62" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="63" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 44\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="64" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="65" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="66" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 54\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="67" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="68" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="69" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 60\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="70" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="71" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="72" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 70\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="73" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="74" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="75" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 80\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="76" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="77" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="78" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 90\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="79" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="80" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="81" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 100\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="82" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="83" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="84" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 109\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="85" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="86" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="87" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 119\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="88" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="89" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="90" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 129\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="91" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="92" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="93" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 139\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="94" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="95" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="96" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 149\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="97" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="98" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="99" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 159\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="100" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="101" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="102" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 169\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="103" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="104" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="105" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 181\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="106" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="107" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="108" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 190\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="109" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="110" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="111" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 197\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="112" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="113" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="114" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 206\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\nprint(train_data)\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="115" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="116" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="117" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 224\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="118" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="119" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="120" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01\xe1\x00\x00\x00\x10\x00\x00\x05\xa0\x00\x00\x04\x17\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x01\xe2\x00\x00\x00/\x00\x00\x05\x9f\x00\x00\x04\x16', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 224\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="121" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="122" format="literal">{'append_source_column': False, 'auto_commit': True, 'controlAreaVisible': True, 'ignore_compute_value': False, 'ignore_names': False, 'merge_type': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\x04\x00\x00\x00\xfc\x00\x00\x04z\x00\x00\x02\xf7\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x03\x05\x00\x00\x01\x13\x00\x00\x04y\x00\x00\x02\xf6', 'source_attr_name': 'Source ID', 'source_column_role': 0, '__version__': 1}</properties>
		<properties node_id="123" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x01!\x00\x00\x00\x10\x00\x00\x04\xe0\x00\x00\x03?\x00\x00\x01"\x00\x00\x00.\x00\x00\x04\xdf\x00\x00\x03&gt;\x00\x00\x00\x00\x00\x00\x00\x00\x06\x00\x00\x00\x01"\x00\x00\x00.\x00\x00\x04\xdf\x00\x00\x03&gt;', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 10\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'filename': None}], 'scriptText': 'import itertools\nimport numpy as np\nimport Orange\nfrom Orange.data import Table, Domain, ContinuousVariable, StringVariable\nfrom sklearn.ensemble import RandomForestClassifier\n\n# Dados concatenados\ndata = in_data\n\n# Novo domínio sem a primeira coluna\nnovos_atributos = data.domain.attributes[1:-1]\nalvo = data.domain.attributes[-1]\ndominio = Domain(novos_atributos, alvo)\n\n# Nova tabela sem a primeira coluna\ntabela = Table.from_table(dominio, data)\n\n# Separar os dados em treino e teste\nn_train = 233\ntrain_data = tabela[:n_train]\ntest_data = tabela[n_train:]\n\nX_train, y_train = train_data.X, train_data.Y\nX_test, y_test = test_data.X, test_data.Y\n\n# Atributos\natributos = [attr.name for attr in train_data.domain.attributes]\n\n# Todos os subconjuntos possíveis de atributos\nsubsets = []\nfor r in range(1, len(atributos) + 1):\n    subsets.extend(itertools.combinations(range(len(atributos)), r))\n\n# Função para avaliar um subconjunto de atributos\ndef evaluate_subset(subset, X_train, y_train, X_test, y_test):\n    # Seleciona subconjunto de atributos\n    X_train_subset = X_train[:, subset]\n    X_test_subset = X_test[:, subset]\n    \n    # Treinamento do modelo \n    model = RandomForestClassifier(n_estimators=10, random_state=42)\n    model.fit(X_train_subset, y_train)\n    \n    # Avalia o modelo no conjunto de teste\n    accuracy = model.score(X_test_subset, y_test)\n    return accuracy\n\n# Avalia todos os subconjuntos e armazenar os resultados\nresults = []\nfor subset in subsets:\n    score = evaluate_subset(subset, X_train, y_train, X_test, y_test)\n    subset_names = "; ".join([atributos[i] for i in subset])\n    n_attributes = len(subset)  # Número de atributos no subconjunto\n    results.append((subset_names, score, n_attributes))\n\n# Subconjunto com a menor quantidade de atributos e a melhor acurácia\nsorted_results = sorted(results, key=lambda x: (-x[1], x[2]))  # Maior acurácia e Menor número de atributos\n# Criar uma tabela com os resultados ordenados\nattributes_meta = StringVariable("Atributos Selecionados")\naccuracy_attr = ContinuousVariable("Acurácia")\nn_attributes_attr = ContinuousVariable("Número de Atributos")\ndomain_results = Domain([], metas=[attributes_meta, accuracy_attr, n_attributes_attr])\ntable_data = [[subset_names, score, n_attributes] for subset_names, score, n_attributes in sorted_results]\nsorted_table = Table.from_list(domain_results, table_data)\n\n# Enviar a tabela ordenada para o Data Table\nout_data = sorted_table\n\nprint(\'Fim\')\n\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xac\x00\x00\x00h\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="124" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\n\x00\x00\x00\x02\x00\x00\x06m\x00\x00\x02R\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00\x0b\x00\x00\x00!\x00\x00\x06l\x00\x00\x02Q', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="125" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf9\x00\x00\x06\x00\x00\x00\x030\x00\x00\x00\x02\x00\x00\x00\x9e\x00\x00\x05\xff\x00\x00\x02\xce\x00\x00\x00\x00\x02\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\x05\xff\x00\x00\x03/', 'select_rows': True, 'show_attribute_labels': True, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
